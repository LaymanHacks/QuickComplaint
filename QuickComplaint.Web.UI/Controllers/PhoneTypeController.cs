//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Generated by Merlin Version: 1.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System.Linq;
using System.Web.Mvc;
using QuickComplaint.Data.Entities;
using QuickComplaint.Data.Repository;

namespace QuickComplaint.Web.UI.Controllers
{
    public class PhoneTypeController : Controller
    {
        private readonly IPhoneTypeRepository _dbPhoneTypeRepository;


        public PhoneTypeController(IPhoneTypeRepository dbPhoneTypeRepository)
        {
            _dbPhoneTypeRepository = dbPhoneTypeRepository;
        }

        // GET: PhoneType/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: PhoneType/Create
        [HttpPost]
        public ActionResult Create(PhoneType phoneType)
        {
            try
            {
                _dbPhoneTypeRepository.Insert(phoneType);
                return RedirectToAction("Index");
            }
            catch
            {
                return View(phoneType);
            }
        }

        // GET: PhoneType/Details/5
        [Route("PhoneType/Details/{id}", Name = "GetPhoneTypeDetails")]
        public ActionResult Details(int id)
        {
            return View(_dbPhoneTypeRepository.GetDataById(id).FirstOrDefault());
        }

        // GET: PhoneType/Edit/5
        [Route("PhoneType/Edit/{id}", Name = "GetPhoneTypeEdit")]
        public ActionResult Edit(int id)
        {
            var phoneType = _dbPhoneTypeRepository.GetDataById(id).FirstOrDefault();

            return View(phoneType);
        }

        // POST: PhoneType/Edit/5
        [Route("PhoneType/Edit/{id}", Name = "PostPhoneTypeEdit")]
        [HttpPost]
        public ActionResult Edit(int id, PhoneType phoneType)
        {
            try
            {
                _dbPhoneTypeRepository.Update(phoneType);
                return RedirectToAction("Index");
            }
            catch
            {
                return View(phoneType);
            }
        }

        // GET: PhoneType
        public ActionResult Index()
        {
            return View();
        }
    }
}