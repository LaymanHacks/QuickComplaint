//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Generated by Merlin Version: 1.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using QuickComplaint.Data.Entities;
using QuickComplaint.Data.Repository;

namespace QuickComplaint.Web.UI.Controllers.Api
{
    public class ComplaintDetailApiController : ApiController
    {
        private readonly IComplaintDetailRepository _dbRepository;

        public ComplaintDetailApiController(IComplaintDetailRepository dbRepository)
        {
            _dbRepository = dbRepository;
        }

        [Route("api/complaintDetails/all", Name = "ComplaintDetailsGetDataRoute")]
        [HttpGet]
        public IQueryable<ComplaintDetail> GetData()
        {
            return _dbRepository.GetData().AsQueryable();
        }

        [Route("api/complaintDetails", Name = "ComplaintDetailsGetDataPageableRoute")]
        [HttpGet]
        public HttpResponseMessage GetDataPageable(string sortExpression, int page, int pageSize)
        {
            if (page < 1) return Request.CreateResponse(HttpStatusCode.BadRequest);
            var results = _dbRepository.GetDataPageable(sortExpression, page, pageSize);
            return Request.CreateResponse(HttpStatusCode.OK, results);
        }
    }
}