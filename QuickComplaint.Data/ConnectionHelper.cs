//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Generated by Merlin Version: 1.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System.Configuration;
using System.Data.Common;
using System;
using System.Data;

namespace QuickComplaint.Data
{
	public static class DbConnectionHelper
	{
	    public static DbConnectionHolder GetConnectionHolder(string connectionName)
		{

			var holder = new DbConnectionHolder(connectionName);
			var closeConn = true;
	        try {
	            holder.Open();
	            closeConn = false;
	        } finally {
	            if (closeConn) {
	                holder.Close();
	                holder = null;
	            }
	        }
	        return holder;
		}

		public static string GetConnectionString(string connectionStringName)
		{
			if (string.IsNullOrEmpty(connectionStringName)) {
				return null;
			}

			string connectionString = null;

			var connObj = ConfigurationManager.ConnectionStrings[connectionStringName];
			if (connObj != null) {
				connectionString = connObj.ConnectionString;
			}

			return connectionString;
		}
	}

	public sealed class DbConnectionHolder
	{
	    public DbConnection Connection { get; set; }

	    public DbConnectionHolder(DbConnection dbConnection)
		{
			if ((dbConnection != null)) {
				Connection = dbConnection;
			}
		}

		public DbConnectionHolder(string connectionName)
		{
		    if ((connectionName == null)) return;
		    try {
		        var connSettings =  ConfigurationManager.ConnectionStrings[connectionName];
		        var factory = DbProviderFactories.GetFactory(connSettings.ProviderName);

		        Connection = factory.CreateConnection();
		        if (Connection != null) Connection.ConnectionString = connSettings.ConnectionString;
		    } catch (Exception) {
		        if ((Connection != null)) {
		            Connection = null;
		        }
		    }
		}

	    public void Open()
	    {
	        if (Connection.State == ConnectionState.Open) {
				return;
			}
	        if ((Connection != null)) {
	            Connection.Open();
	        } else {
	            throw new Exception("Connection is nothing, check that connection information is set in the calling project.");
	        }
	    }

	    public void Close()
		{
			if (Connection.State != ConnectionState.Closed) {
				return;
			}
			Connection.Close();
		}
	}
}

